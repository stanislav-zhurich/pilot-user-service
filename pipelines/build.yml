# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop
stages: 
  - stage: Build
    displayName: Build
    pool: Azure Pipelines
    jobs:
      - job: BuildJob
        steps:
        - task: Gradle@3
          displayName: Compile
          inputs:
            gradleWrapperFile: 'gradlew'
            workingDirectory: '$(System.DefaultWorkingDirectory)'
            tasks: 'build'
            publishJUnitResults: false
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.17'
            sonarQubeRunAnalysis: false
            checkStyleRunAnalysis: false
            spotBugsAnalysis: false
        - task: Gradle@3
          displayName: Create Jar
          inputs:
            gradleWrapperFile: 'gradlew'
            workingDirectory: '$(System.DefaultWorkingDirectory)'
            tasks: 'bootJar'
            publishJUnitResults: false
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.17'
            sonarQubeRunAnalysis: false
            spotBugsAnalysis: false
        - task: Gradle@3
          displayName: Build Image
          inputs:
            gradleWrapperFile: 'gradlew'
            workingDirectory: '$(System.DefaultWorkingDirectory)'
            tasks: 'bootBuildImage'
            publishJUnitResults: false
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.17'
            sonarQubeRunAnalysis: false
            spotBugsAnalysis: false
        - bash: | 
            GetImageTag=$(docker images stanislavzhurich/pilot-user-service:* --format='{{.Tag}}' | head -1)
            echo "##vso[task.setvariable variable=IMAGE_TAG;isOutput=true]$GetImageTag"
          name: ImageTag
          displayName: Find Image Tag
        - bash: |
            echo "$(IMAGE_TAG)"
          displayName: Print Image Tag
        - task: CmdLine@2
          displayName: Package Helm Chart
          inputs:
            workingDirectory: '$(System.DefaultWorkingDirectory)'
            script: helm package ./pilot-user-service

  - stage:
    condition: succeeded()
    displayName: Publish
    pool: Azure Pipelines
    variables:
      DOCKER_IMAGE_TAG: $[ stageDependencies.Build.outputs['BuildJob.ImageTag.IMAGE_TAG'] ]
    jobs:
      - job: 
        steps:
        - task: Docker@2
          displayName: Login to Docker Hub
          inputs:
            containerRegistry: 'DockerHubConnection'
            command: 'login'
        - task: CmdLine@2
          displayName: Print Image Tag
          inputs:
           script: echo $(DOCKER_IMAGE_TAG)
            
        - task: Docker@2
          displayName: Push Image
          inputs:
            containerRegistry: 'DockerHubConnection'
            repository: 'stanislavzhurich/pilot-user-service'
            command: 'push'
            tags: $(DOCKER_IMAGE_TAG)
        - task: CmdLine@2
          displayName: Publish Helm Chart
          inputs:
            workingDirectory: '$(System.DefaultWorkingDirectory)'
            script: helm push pilot-user-service-0.1.0.tgz  oci://registry-1.docker.io/stanislavzhurich
        
  - stage:
    condition: succeeded()
    displayName: Deploy
    pool: Azure Pipelines
    jobs:
      - job: 
        steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: 'echo ''Hello world'''